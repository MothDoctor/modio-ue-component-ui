"use strict";(self.webpackChunkmodio_docs=self.webpackChunkmodio_docs||[]).push([[2590],{49414:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var i=n(74848),o=n(28453);const s={id:"ue-substitute-components",title:"Substituting Components in the Template Mod Browser",slug:"/unreal/component-ui/substitute-components/",custom_edit_url:"https://github.com/modio/modio-ue4-internal/tree/main/Plugins/ModioComponentUI/Doc/component-ui/substitute_components.mdx"},r=void 0,d={id:"component-ui/ue-substitute-components",title:"Substituting Components in the Template Mod Browser",description:"Substitutability of components is one of the core design features of the mod.io component UI framework. This guide explains how mod.io UI interfaces enable the substituting of mod.io default components for your own components in the template implementation of the component UI framework.",source:"@site/public/en-us/component-ui/substitute_components.mdx",sourceDirName:"component-ui",slug:"/unreal/component-ui/substitute-components/",permalink:"/unreal/component-ui/substitute-components/",draft:!1,unlisted:!1,editUrl:"https://github.com/modio/modio-ue4-internal/tree/main/Plugins/ModioComponentUI/Doc/component-ui/substitute_components.mdx",tags:[],version:"current",frontMatter:{id:"ue-substitute-components",title:"Substituting Components in the Template Mod Browser",slug:"/unreal/component-ui/substitute-components/",custom_edit_url:"https://github.com/modio/modio-ue4-internal/tree/main/Plugins/ModioComponentUI/Doc/component-ui/substitute_components.mdx"},sidebar:"sidebar",previous:{title:"Building a Simple Mod Browser from Components",permalink:"/unreal/component-ui/building-a-screen/"},next:{title:"Creating Custom Components",permalink:"/unreal/component-ui/custom-components/"}},c={},a=[{value:"Interfaces and getter functions",id:"interfaces-and-getter-functions",level:2},{value:"<code>WBP_ModioModBrowser</code> library button example",id:"wbp_modiomodbrowser-library-button-example",level:3},{value:"Creating custom components to substitute",id:"creating-custom-components-to-substitute",level:2},{value:"Substituting a component",id:"substituting-a-component",level:2}];function u(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Substitutability of components is one of the core design features of the mod.io component UI framework. This guide explains how mod.io UI interfaces enable the substituting of mod.io default components for your own components in the template implementation of the component UI framework."}),"\n",(0,i.jsx)(t.h2,{id:"interfaces-and-getter-functions",children:"Interfaces and getter functions"}),"\n",(0,i.jsxs)(t.p,{children:["The previous guide to ",(0,i.jsx)(t.a,{href:"/unreal/component-ui/building-a-screen/",children:"building a simple mod browser from components"})," demonstrates a basic use of the interface design pattern seen throughout the template UI implementation. The outermost browser widget is composed of multiple sub-components, however these are never referenced directly. Each sub-component is instead typed as a ",(0,i.jsx)(t.code,{children:"UWidget"})," with a desired interface accessed via a getter function."]}),"\n",(0,i.jsxs)(t.h3,{id:"wbp_modiomodbrowser-library-button-example",children:[(0,i.jsx)(t.code,{children:"WBP_ModioModBrowser"})," library button example"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"WBP_ModioModBrowser"})," contains the ",(0,i.jsx)(t.code,{children:"LibraryViewButton"})," that, when clicked, displays the current user's subscriptions in the mod tile grid."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"LibraryViewButton in editor",src:n(3617).A+"",width:"2571",height:"1379"})}),"\n",(0,i.jsxs)(t.p,{children:["Getter functions for ",(0,i.jsx)(t.code,{children:"WBP_ModioModBrowser"})," are found in ",(0,i.jsx)(t.strong,{children:"My Blueprint"})," under ",(0,i.jsx)(t.strong,{children:"Functions -> mod.io -> UI -> Mod Browser -> Widget Getters"}),". Here ",(0,i.jsx)(t.code,{children:"GetLibraryViewButtonWidget()"})," is found."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"LibraryViewButton getter function and BP graph",src:n(88250).A+"",width:"1674",height:"719"})}),"\n",(0,i.jsxs)(t.p,{children:["Some functions in ",(0,i.jsx)(t.code,{children:"WBP_ModioModBrowser"})," are defined in the parent class ",(0,i.jsx)(t.code,{children:"ModioModBrowser.h"}),", while others are defined only in ",(0,i.jsx)(t.code,{children:"WBP_ModioModBrowser"}),". ",(0,i.jsx)(t.code,{children:"GetLibraryViewButtonWidget()"})," is the former. Its definition in ",(0,i.jsx)(t.code,{children:"ModioModBrowser.h"})," shows that it returns type ",(0,i.jsx)(t.code,{children:"TScriptInterface<IModioUIClickableWidget>"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:'UFUNCTION(BlueprintCallable, BlueprintNativeEvent, Category = "mod.io|UI|Mod Browser|Widget Getters", \n       meta = (BlueprintProtected))\nTScriptInterface<IModioUIClickableWidget> GetLibraryViewButtonWidget() const;\n'})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"LibraryViewButton"})," is of type ",(0,i.jsx)(t.code,{children:"WBP_ModioDefaultIconButton"}),". This type implements ",(0,i.jsx)(t.code,{children:"IModioUIClickableWidget"}),", allowing it to be returned by ",(0,i.jsx)(t.code,{children:"GetLibraryViewButtonWidget()"}),"."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"WBP_ModioDefaultIconButton"})," inherits ",(0,i.jsx)(t.code,{children:"IModioUIClickableWidget"})," and more via ",(0,i.jsx)(t.code,{children:"UModioDefaultIconButton"})," -> ",(0,i.jsx)(t.code,{children:"UModioDefaultTextButton"})," -> ",(0,i.jsx)(t.code,{children:"UModioButtonWidget"}),"."]})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"GetLibraryViewButtonWidget()"})," is used throughout ",(0,i.jsx)(t.code,{children:"WBP_ModioModBrowser"})," to call functions that are made available by the ",(0,i.jsx)(t.code,{children:"IModioUIClickableWidget"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Adding a clicked handler to LibraryViewButton",src:n(44199).A+"",width:"829",height:"464"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"GetLibraryViewButtonWidget()"})," returns ",(0,i.jsx)(t.code,{children:"IModioUIClickableWidget"})," because this represents its most essential function as a button \u2014 being clicked. However, ",(0,i.jsx)(t.code,{children:"WBP_ModioDefaultIconButton"})," implements many interfaces that are relevant to its function and styling: ",(0,i.jsx)(t.code,{children:"IModioUIImageDisplayWidget"}),", ",(0,i.jsx)(t.code,{children:"IModioUIHasTextWidget"}),", ",(0,i.jsx)(t.code,{children:"IModioUISelectableWidget"}),", ",(0,i.jsx)(t.code,{children:"IModioUIHoverableWidget"})," and more."]}),"\n",(0,i.jsxs)(t.p,{children:["In cases where an interface other than ",(0,i.jsx)(t.code,{children:"IModioUIClickableWidget"})," functionality is required, ",(0,i.jsx)(t.code,{children:"GetLibraryViewButtonWidget()"})," is still used. Its return value is either cast to the required interface, or a message function taking an ",(0,i.jsx)(t.strong,{children:"Object"})," reference is used."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.img,{alt:"Using SetSelectedState message function",src:n(53833).A+"",width:"1108",height:"365"}),"\n",(0,i.jsxs)(t.em,{children:["SetSelectedState is a message function.  It does nothing unless ",(0,i.jsx)(t.code,{children:"Target"})," implements ",(0,i.jsx)(t.code,{children:"IModioUISelectableWidget"})]})]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["With the exception of ",(0,i.jsx)(t.strong,{children:"Object"})," references, getter functions throughout the component UI ",(0,i.jsx)(t.em,{children:"never"})," cast to a concrete type!"]})}),"\n",(0,i.jsx)(t.h2,{id:"creating-custom-components-to-substitute",children:"Creating custom components to substitute"}),"\n",(0,i.jsx)(t.p,{children:"By adhering to the above pattern, the template implementation allows you to substitute your own components directly into the Widget Blueprint provided the substituting component implements the expected interface(s). There are 3 ways to achieve this:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/unreal/component-ui/custom-components/#wrapping-an-existing-widget",children:"Wrapping an existing widget"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/unreal/component-ui/custom-components/#creating-a-new-widget",children:"Creating a new widget"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/unreal/component-ui/custom-components/#subclassing-an-existing-widget",children:"Subclassing an existing widget"})}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["These techniques are explained in detail in ",(0,i.jsx)(t.a,{href:"/unreal/component-ui/custom-components/",children:"Creating Custom Components"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"substituting-a-component",children:"Substituting a component"}),"\n",(0,i.jsx)(t.p,{children:"After creating a new component that implements the required interfaces, remove the existing component.  Next, add your new component to the Blueprint hierarchy and getter function.  Configure any default values and styling options that are exposed to the outer widget, as needed."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Replacing the library button in the hierarchy",src:n(73919).A+"",width:"1175",height:"662"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Replacing the library button in the widget getter",src:n(31255).A+"",width:"884",height:"348"})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},44199:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/substitute-LibraryViewButtonAddClickedHandler-f213d34e1cbf58ea141397c29dc38aaa.png"},88250:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/substitute-LibraryViewButtonGetter-b8556edeadef824fba42621e9b5caef2.png"},3617:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/substitute-LibraryViewButtonInEditor-aee9826b71732b357c8d77b1a9fda1dd.png"},53833:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/substitute-LibraryViewButtonSetSelectedState-b87fdfd01af2ad3517edc9f9385aec2e.png"},31255:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/substitute-NewButtonInGetter-7fe2218ba5cdd5e761d84527d5002a5d.png"},73919:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/substitute-NewButtonInHierachy-49579e2845cb7a54208fb05ed6a65f21.png"},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var i=n(96540);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);